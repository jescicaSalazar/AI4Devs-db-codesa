generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Company {
    id   Int    @id @default(autoincrement())
    name String @unique
    employees Employee[]
    positions Position[]
}

model Employee {
    id         Int    @id @default(autoincrement())
    companyId  Int
    name       String
    email      String @unique
    role       String
    isActive   Boolean @default(true)
    company    Company @relation(fields: [companyId], references: [id], onDelete: Cascade)
}

model InterviewFlow {
    id          Int    @id @default(autoincrement())
    description String?
    positions   Position[]
    steps       InterviewStep[]
}

model Position {
    id                 Int    @id @default(autoincrement())
    companyId          Int
    interviewFlowId    Int?
    title              String
    description        String?
    status             String
    isVisible          Boolean @default(true)
    location           String?
    jobDescription     String?
    requirements       String?
    responsibilities   String?
    salaryMin          Float?
    salaryMax          Float?
    employmentType     String?
    benefits           String?
    companyDescription String?
    applicationDeadline DateTime?
    contactInfo        String?
    company           Company @relation(fields: [companyId], references: [id], onDelete: Cascade)
    interviewFlow     InterviewFlow? @relation(fields: [interviewFlowId], references: [id], onDelete: SetNull)
}

model InterviewStep {
    id              Int    @id @default(autoincrement())
    interviewFlowId Int
    interviewTypeId Int
    name           String
    orderIndex     Int
    interviewFlow  InterviewFlow @relation(fields: [interviewFlowId], references: [id], onDelete: Cascade)
}
